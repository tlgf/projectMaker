0.1)About:
projectMake is a collection of scripts and text files used to automatically generate project directories and source files with necessary make files etc. 

Called from the shell using projectMake

0.1.1)Files:
-projectMake.sh
  --project.sh
    ---source.sh
-TEMPLATEmake
-source.cpp
-source.hpp

0.2)To Do:
- Work on the TEMPLATEmake
	Begin by only populating the comment titleblock fields. The recipes are then filled out manually. This can then be extended for automation based on source files etc. 
	ie. have a 'blank' makefile that does nothing, then the script can set variables to populate each recipe
- Work on the barebonesSource.cpp & .hpp
	These will be used for both C and CPP projects. Have some libraries included by default. Begin with the same principle as the blank makefile - just populate the title block. 
- Expand the functionality for creating projects in other languages... IE python 

1.0)Functional Description of projectMaker.sh:
***Specify 1 of 2 modes PROJECT or SOURCE FILE***
\___PROJECT
  -> user specifies title, language and optionally, a directory
  -> script navigates to specified directory, creates folder     structure
  -> script configures the barebones makefile (see 1.2 for details)
  -> script creates the barebones sourcefile(s)
  -> script prompts user to write brief README.md file
  -> user specifies y/n for a git repo to be configured
  -> tree is used to show resulting project directory
       \
	\___SOURCE FILE
	-> user inputs name of source file(s) to be created from the template
	-> script creates the source file(s) from template

1.1)Structural Description of projectMaker.sh:
***Each step from 1.0 is compartmentalised into a set of functions linked by minimal commands***

1.2)Functional Description of TEMPLATEmake
***Initially for cpp-based compilation***
->

1.3)Functional Description of  

